0. BaseTask (для него создаем отдельный пакет basetask, обьекты классов задания запускаем в main методе отдельного класса раннера, далее "раннер")

- создать класс TrainMethodsString и в нем
-- создать невозвратный метод printMama, который ничего не принимает на вход печатает в консоль «мама мыла раму»
-- создать невозвратный метод printPapa, который ничего не принимает на вход печатает в консоль «папа мыла раму»
-- создать невозвратный метод printString, который принимает на вход строку и печатает в консоль эту строку
-- создать невозвратный метод printMamaString, который принимает на вход строку и печатает в консоль «мама мыла » и эту строку
-- создать класс TrainMethodsStringRunner с методом main, в этом методе создать обьект класса TrainMethodsString и вызвать всего его методы

- создать класс TrainMethodsPrimitive и в нем
-- создать невозвратный метод printInt, который принимает на вход целое число (int) и печатает в консоль «я получил на вход число » и это число
-- создать невозвратный метод printLong, который принимает на вход целое число (long) и печатает в консоль «я получил на вход  длинное число » и это число
-- создать невозвратный метод printChar, который принимает на вход символ (char) и печатает в консоль «я получил на вход символ » и это число
-- создать невозвратный метод printFloat, который принимает на вход дробное число (float) и печатает в консоль «я получил на вход дробное число » и это число
-- создать невозвратный метод printDouble, который принимает на вход дробное число (double) и печатает в консоль «я получил на вход длинное дробное число » и это число
-- создать невозвратный метод printShort, который принимает на вход целое число (short) и печатает в консоль «я получил на вход короткое число » и это число
-- создать невозвратный метод printByte, который принимает на вход целое число (byte) и печатает в консоль «я получил на вход очень короткое число » и это число
-- создать невозвратный метод printBoolean, который принимает на вход булево значение (boolean) и печатает в консоль «я получил на вход булево » и это число
-- создать класс TrainMethodsPrimitiveRunner с методом main, в этом методе создать обьект класса TrainMethodsPrimitive и вызвать всего его методы

- создать класс TrainMethodsReturn и в нем
-- создать метод returnNewInt, который принимает на вход целое число (int) и возвращает это число умноженное на 3
-- создать метод returnNewLong, который принимает на вход целое число (long) и возвращает это число минус 4
-- создать метод returnNewChar, который принимает на вход символ (char) и возвращает строку из двух таких символов
-- создать метод returnNewFloat, который принимает на вход дробное число (float) и возвращает это число деленное на 2
-- создать метод returnNewDouble, который принимает на вход дробное число (double) и возвращает это число плюс 8
-- создать метод returnNewShort, который принимает на вход целое число (short) и возвращает это число минус 1
-- создать метод returnNewByte, который принимает на вход целое число (byte) и возвращает это число умноженное на 2
-- создать метод returnNewBoolean, который принимает на вход булево значение (boolean) и возвращает обратное булево
-- создать класс TrainMethodsReturnRunner с методом main, в котором создать обьект класса TrainMethodsReturn, и отпечатать в консоль значение, возвращаемое каждым из его методов в виде "метод <название метода> вернул " и возвращаемое значение

- создать класс TrainMethodsIf и в нем
-- создать метод returnNewInt, который принимает на вход целое число (int) и если оно меньше 8, то возвращает это число умноженное на 7, в противном случае деленное на 4
-- создать метод returnNewLong, который принимает на вход целое число (long) и если оно больше 300, то возвращает это число минус 300, в противном случае плюс 20
-- создать метод returnNewChar, который принимает на вход символ (char) и если это 'g', то возвращает строку "go", в противном случае строку из этого символа с префиксом "o"
-- создать метод returnNewFloat, который принимает на вход дробное число (float) и если оно равно 0.67, то возвращает это число, в противном случае число умноженное на 2
-- создать метод returnNewDouble, который принимает на вход дробное число (double) и если оно больше 30, но меньше 80, то  возвращает это число плюс 87, если оно больше 80, но меньше 400, то возвращает это число минус 87, а если оно больше 400, то деленное на 4, в остальных случаях возвращает само число
-- создать невозвратный метод returnNewBoolean, который принимает на вход булево значение (boolean) и если оно true то печатает в консоль "Я получил на вход значение истины", в противном случае печатает в консоль "Я получил на вход ложь"
-- создать класс TrainMethodsIfRunner с методом main, в котором создать обьект класса TrainMethodsIf, и отпечатать в консоль значение, возвращаемое каждым из его методов в виде "метод <название метода> вернул " и возвращаемое значение, последний метод просто вызвать

- создать класс Mouse и в нем
-- строковое поле name
-- целочисленное поле age
-- конструктор, принимающий имя и возраст и инициализирующий соответствующие поля
-- геттеры и сеттеры на каждое поле
-- невозвратный метод printMouseDetails, который печатает в консоль информацию о мыши в виде "Я мышь, меня зовут <имя мыши> и мне <возраст мыши> лет"

- создать класс Souce и в нем
-- строковое поле name
-- строковое поле color
-- конструктор, принимающий имя и цвет и инициализирующий соответствующие поля
-- геттеры и сеттеры на каждое поле
-- невозвратный метод printSouceDetails, который печатает в консоль информацию о соусе в виде "Это соус <имя соуса> <цвет соуса> цвета"

- создать класс Bee и в нем
-- строковое поле gender
-- длинное целочисленное поле weight
-- конструктор, принимающий пол и массу и инициализирующий соответствующие поля
-- геттеры и сеттеры на каждое поле
-- невозвратный метод printBeeDetails, который делит 500 кг на массу пчелы и печатает в консоль информацию о ней в виде "Я легче лося в <> раз"

- создать класс Obstacle и в нем
-- строковое поле description
-- строковое поле severity
-- конструктор, принимающий описание и важность и инициализирующий соответствующие поля
-- геттеры и сеттеры на каждое поле
-- невозвратный метод printObstacleDetails, который печатает в консоль информацию о трудности в виде "Возникло <важность> препятствиие <описание препятствия>"

- создать класс Pineapple и в нем
-- строковое поле grade
-- дробное числовое поле heatCapacity
-- конструктор, принимающий сорт и теплоемкость и инициализирующий соответствующие поля
-- геттеры и сеттеры на каждое поле
-- невозвратный метод printPineappleDetails, который сравнивает теплоемкость ананаса с 2140 и если она больше, то печатает в консоль "Я ананас, теплоемкость которого больше, чем у ветчины", в противном случае печатает в консоль "В ветчине тепла запасется больше :(
"

- создать класс TrainMethodsObjects и в нем
-- создать метод processMouse, который принимает на вход обьект мыши (Mouse)
 и печатает в консоль ее имя, возраст и вызывающий метод printMouseDetails
-- создать метод processSouce, который принимает на вход обьект соуса (Souce) и печатает в консоль его имя, цвет и вызывающий метод printSouceDetails
-- создать метод processBee, который принимает на вход обьект пчелы (Bee)
 и печатает в консоль ее пол, вес и вызывающий метод printBeeDetails
-- создать метод processObstacle, который принимает на вход обьект препятствия (Obstacle) и печатает в консоль его описание, важность и вызывающий метод printObstacleDetails
-- создать метод processPineapple, который принимает на вход обьект ананаса (Pineapple)
 и печатает в консоль его сорт, теплоемкость и вызывающий метод printPineappleDetails
-- создать класс TrainMethodsObjectsRunner с методом main, в котором создать обьект класса TrainMethodsObjects, и вызвать всего его методы
