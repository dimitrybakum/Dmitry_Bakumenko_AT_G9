домашка:

0.0 В случае, если какой-то из методов будет бросать исключение, обработать его,
где в части catch печатать в консоль название исключения и обьяснение, почему оно возникает.

0.1 пользуемся классами обьектов из задания по коллекциям (Bubble, Person, Water, Sand, Chair)
0.2 каждое задание делаем только со стримом и в виде одного оператора (одна цепочка методов вызова через точку)
0.3 каждое задание делаем в отдельном классе *Runner, напрмер, ButterfliesRunner, с собственным main методом

1.
Создать пустой список стрингов butterflies (через new ArrayList)
Добавить в список 4 бабочки (Common blue, Swallowtail, Aglais io, Common blue)
Добавить к каждому элементу кавычки
Оставить только те слова, которые содержат букву "a" и букву "о"
Вывести слова в консоль с новой строки

2.
Создать список строк стрингов figures из 5 фигур (Овал, Прямоугольник, Круг, Квадрат, Эллипс) через (Stream.of())
Заменить каждое слово на целое число, соответствующее количеству буков в слове
Отфильтровать числа, которые больше 4
Отпечатать все оставшиеся числа в консоль

3.
Создать пустой список стрингов cities (через new ArrayList)
Добавить в список 3 города (Минск, Москва, Берлин)
Посчитать сумму всех буков во всех словах и вывести число в консоль

4.
Создать поток данных стрингов из 7 авто (Мерс, Ауди, Жигуль, Рено, Жигуль, Жигуль, Ауди) (через Stream.of())
Оставить в потоке только уникальные названия авто
Отфильтровать только те названия, которые содержат букву "и"
Пропустить 1 название
Все названия привести в верхний регистр
Отпечатать все названия в консоль с новой строки

5.
Создать поток данных стрингов countries из 4 стран (Андора, Португалия, Англия, Замбия) (через Stream.of())
Отфильтровать страны, которые содержат в себе хотя бы одну гласную букву
Отфильтровать страны, в названии которых меньше 7 букв
Перевести все страны в верхний регистр
Добавить к каждому названию кавычки
Отпечатать в консоль с новой строки

6.
Создать список строк birds из 5 птиц (Чайка, Дрозд, Бусел, Голубь, Воробей, Цапля) через (Arrays.asList())
Создать из списка поток данных, заменить в каждую букву "о" на букву "а"
Собрать все слова в одну строку в ниждем регистре
Убрать все символы мягкого знака
Разбить на новые строки по букве "б"
Отпечатать в консоль с новой строки в виде --Чайка--

7.
Создать поток данных стрингов elements (Text field, Radio, Check-box, Drop-down, Picker, Breadcrumb) (через Stream.of())
Если слово нечетное, то заменить в нем все буквы "e" на букву "o", а если четное, то заменить слово на число количества буков в этом слове
Оставить в потоке только уникальные значения
Отпечатать в консоль с новой строки

8.
Создать поток данных целых чисел numbers из 8 чисел (3342, 34, 79, 23426, 68, 1324, 55, 7699) через (Stream.of())
В потоке данных проитерировать числа и отпечатать числа в консоль новой строки
Отсортировать и снова отпечатать в консоль с новой строки
Посчитать сумму всех чисел и вывести результат в консоль

9.
Создать поток данных целых чисел numbersMod из 8 чисел (626, 435, 9, 1463268, 24, 2237, 33, 9090) через (Stream.of())
Отфильтровать те числа, которые содержать цифру 3
Разбить числа на отдельные цифры и заменить цифры соответствующими словами
Оставить только уникальные слова, отсортировать в нисходящем порядке и отпечатать в консоль с новой строки

10.
Создать поток данных дробных чисел doubles из 8 чисел (33.42, 34.3, 0.79, 2.3426, 6.8, 13.24, 5.5, 769.9) через (Stream.of())
Округлить каждое число до целого
На основании этого потока сгенерировать новый поток данных целых чисел из случайных чисел с границами от 0 до числа из иходного потока данных
Убрать дубликаты значений
Заменить каждое число в получившемся потоке данных новым потоком состоящим из обьектов Bubble в количестве равному заменяемому числу,
создавая обьекты с обьемом равным числу из исходного потока и именем по маске "Bubble vol-" + i, где i - число из исходного потока
Отпечатать в консоль каждый из обьектов нового потока с новой строки
Найти общий обьем полученного потока пузырьков и отпечатать в консоль

11.
Создать список пузырей (класса Bubble) bubbles из 3 пузырьков с обьемами (2, 4, 5) и именами (CO2, O2, CO) соответственно, через (Arrays.asList())
В потоке данных отфельтровать только те пузыри, обьем которых больше 3
Отсортировать данные по имени в восходящем порядке
На основании существующего потока данных создать новый, в котором каждый новый Bubble имеет обьем в 3 раза больше исходного
Вычислить сумму конечного обьема всех пузырей и отпечатать в консоль

12.
Создать поток данных people класса Person (через new Stream.of) с возрастом (32, 24, 55, 63) и именами (Коля, Оля, Вася, Маша) соответственно
Отфильтровать людей, которые моложе 60
Отсортировать в восходящем порядке по именам
На основании существующего потока данных создать новый, в котором каждый новый Person имеет возраст на 4 года больше исходного
Вычислить средний возраст конечного людей и отпечатать в новый текстовый файл

13.
Создать поток данных water класса Water (через new Stream.of)
из 4 объектов воды с цветом (Прозрачная, Прозрачная, Мутная, Синяя) и запахом (Нет, Нет, Аммиачный, Мятный) соответственно
Отфильтровать воду, цвет которой не "Прозрачная"
Отсортировать в нисходящем порядке по запаху
На основании существующего потока данных создать новый, в котором каждая новая Water имеет запах с удвоенной буквой ы, если такая встречается
Обьединить запах всех обьектов в одну строку
Найти количество буков в ней и отпечатаь в консоль

14.
Создать пустой список песка (класса Sand) sandbox (через new ArrayList)
Заполнить 5 объектами песка с весом (12, 8, 15, 7, 11) и именами (Речной, Речной, Карьерный, Карьерный, Речной) соответственно
Отфильтровать только тот песок, который весит больше 9 и имя которого содержит букву "ч"
Отсортировать по весу в восходящем порядке
На основании существующего потока данных создать новый, в котором каждый новый Sand имеет вес умноженный на 2, и имя в верхнем регистре
На основании получившегося потока данных создать коллекцию Map, где ключ - это вес, а значение - имя
Отпечатать каждый из элементов карты в виде value:key в текстовый файл

15.
Создать поток данных furniture класса Chair (через new Stream.of) furniture из 3 стульев
высотой (120, 90, 100, 110) и шириной (40, 30, 50, 45) соответственно
Отфильтровать только те стулья, который выше или равны 100 и уже или равны 50
Отсортировать по высоте, а если высота равна, то по ширине в нисходящем порядке
На основании существующего потока данных создать новый, в котором каждый новый Chair имеет высоту, деленную на 2, и ширину, умноженную на случайное число от 3 до 8 включительно
На основании получившегося потока данных создать новый, представляющий собой уникальный набо высот стульев умноженных на их ширину
Найти наибольшее значение в получившемся потоке
Создать новый обьект Bubble с обьемом равным найденному наибольшему значению и именем равным найденному наибольшему значению, представленным в виде словесного выражения каждой цифры числа этого значения, указанного чере пробел
Напечатать строковое значение полученного обьекта в текстовый файл